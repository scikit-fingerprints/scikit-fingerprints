[project]
name = "scikit-fingerprints"
version = "0.0.0"  # we set version dynamically in GitHub Actions from Git tags
description = "Library for effective molecular fingerprints calculation"
authors = [{ name = "AGH ML & Chemoinformatics Group", email = "jadamczy@agh.edu.pl" }]
keywords = ["molecular fingerprints", "molecular descriptors", "chemoinformatics", "chemistry", "machine learning"]
license = "MIT"
readme = "README.md"
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
requires-python = ">=3.10,<3.14"

dependencies = [
    "descriptastorus>=2.0.0,<3",
    "e3fp>=1.0.0,<2",
    "huggingface_hub>=0.0.0",
    "joblib>=1.0.0,<2",
    "mordredcommunity>=2.0.0,<3",
    "numba>=0.48.0,<1",
    "numpy>=1.20.0,<2",
    "pandas<3",
    "rdkit<=2024.9.4",
    "scikit-learn>=1.0.0,<2",
    "scipy>=1.0.0,<2",
    "tqdm>=4.0.0,<5",
]

[project.urls]
homepage = "https://github.com/scikit-fingerprints/scikit-fingerprints"
repository = "https://github.com/scikit-fingerprints/scikit-fingerprints"
documentation = "https://scikit-fingerprints.github.io/scikit-fingerprints"
"Bug Tracker" = "https://github.com/scikit-fingerprints/scikit-fingerprints/issues"

[tool.poetry]
packages = [{ include = "skfp" }]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
coverage = "*"
jupyter = "*"
mypy = "*"
pip-audit = "*"
pre-commit = "*"
pytest = "*"
pytest-cov = "*"
ruff = "*"
setuptools = "*"  # to avoid PyCharm errors
xenon = "*"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
mypy = "*"
pip-audit = "*"
pre-commit = "*"
pytest = "*"
ruff = "*"
xenon = "*"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
ipython = "*"
nbsphinx = "*"
pydata-sphinx-theme = "*"
sphinx = "*"
sphinx-copybutton = "*"

[tool.poetry.group.eval]
optional = true

[tool.poetry.group.eval.dependencies]
lightgbm = "*"
matplotlib = "*"

[tool.pytest.ini_options]
python_files = "*.py"
addopts = "--assert=plain"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
